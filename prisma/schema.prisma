generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  age          Int
  contact      String        @default("999999")
  appointments Appointment[]
}

model Hospital {
  id                  Int                 @id @default(autoincrement())
  name                String
  contact             String              
  email               String              @unique
  password            String
  location            String
  zipcode             Int             
  rating              Int                 
  departments         Department[]        @relation("HospitalDepartments")
  appointments        Appointment[]
  beds                BedCount?           @relation("HospitalToBed")
  medicineInventories MedicineInventory[]
}

model Department {
  id           Int           @id @default(autoincrement())
  name         String
  hospitalId   Int
  hospital     Hospital      @relation(fields: [hospitalId], references: [id], name: "HospitalDepartments")
  head         String?
  appointments Appointment[] // List of appointments within this department
}

model Appointment {
  id                Int         @id @default(autoincrement())
  title             String
  time              DateTime
  appointmentStatus Status      @default(Pending)
  patientId         Int
  hospitalId        Int
  departmentId      Int?
  patient           Patient     @relation(fields: [patientId], references: [id])
  hospital          Hospital    @relation(fields: [hospitalId], references: [id])
  department        Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull)
}

model BedCount {
  id                 Int      @id @default(autoincrement())
  hospitalId         Int      @unique
  hospital           Hospital @relation(fields: [hospitalId], references: [id], name: "HospitalToBed")
  totalBeds          Int
  totalAvailableBeds Int
  icu                ICU?
  general            General?
  premium            Premium?
}

model ICU {
  id           Int      @id @default(autoincrement())
  totalBed     Int      @default(50)
  availableBed Int      @default(20)
  bedCountId   Int      @unique
  bedCount     BedCount @relation(fields: [bedCountId], references: [id])
}

model General {
  id           Int      @id @default(autoincrement())
  totalBed     Int      @default(200)
  availableBed Int      @default(120)
  bedCountId   Int      @unique
  bedCount     BedCount @relation(fields: [bedCountId], references: [id])
}

model Premium {
  id           Int      @id @default(autoincrement())
  totalBed     Int      @default(80)
  availableBed Int      @default(20)
  bedCountId   Int      @unique
  bedCount     BedCount @relation(fields: [bedCountId], references: [id])
}

model MedicineInventory {
  id         Int      @id @default(autoincrement())
  name       String
  quantity   Int
  expiryDate DateTime
  hospitalId Int
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum Status {
  Pending
  Confirmed
  Completed
  Cancelled
}
